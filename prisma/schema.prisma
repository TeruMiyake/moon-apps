// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

// ========= アイテム関連 ====================================

// アイテムのランク 
// F, E, D, C, B, A, S
model ItemRank {
  id       Int       @id @default(autoincrement())
  name     String
  items    Item[]
  upgrades Upgrade[]
}

// アイテムのタイプ
// 武器, 防具, 足具, アクセサリー, アイテム
model ItemType {
  id         Int     @id @default(autoincrement())
  equippable Boolean
  name       String
  items      Item[]
}

// アイテム（実際の所持アイテムではなく、システム上のアイテム種類を表す）
model Item {
  id         Int        @id @default(autoincrement())
  name       String
  rank       ItemRank   @relation(fields: [rankId], references: [id])
  rankId     Int
  type       ItemType   @relation(fields: [typeId], references: [id])
  typeId     Int
  itemNeeds1 ItemNeed[] @relation("itemNeed1")
  ItemNeeds2 ItemNeed[] @relation("itemNeed2")
  ItemNeeds3 ItemNeed[] @relation("itemNeed3")
  ItemNeeds4 ItemNeed[] @relation("itemNeed4")
  ItemNeeds5 ItemNeed[] @relation("itemNeed5")
  ItemNeeds6 ItemNeed[] @relation("itemNeed6")
  ItemNeeds7 ItemNeed[] @relation("itemNeed7")
  ItemNeeds8 ItemNeed[] @relation("itemNeed8")
}

// アイテム合成結果の種類
// 1: 失敗, 2: 成功, 3: 大成功, 4: 超大成功
model UpgradeResultType {
  id       Int       @id @default(autoincrement())
  name     String
  upgrades Upgrade[]
}

// アイテム合成結果
// 日時不明の場合、古めの日時を入れさせる運用とする
// （途中で仕様が変更された場合などに、古い結果が新しい日時で入力されていると攪乱要素になるが、
// 　逆は大きな問題にはならないため）
model Upgrade {
  id            Int               @id @default(autoincrement())
  originalLevel Int // 合成前のレベル
  triedAt       DateTime          @default(now()) // ただし時刻はアプリケーションロジックで無視する
  registeredAt  DateTime          @default(now()) // データが入力された日時
  rank          ItemRank          @relation(fields: [rankId], references: [id])
  rankId        Int
  resultType    UpgradeResultType @relation(fields: [resultTypeId], references: [id])
  resultTypeId  Int
  userName      String // 合成したユーザー名（空白での登録可）
}

// ユーザによるアイテム需要
// 必要とするアイテムを登録できる
// 登録できるアイテムは 8 個まで
// 武器1, 2
// 防具
// 足具
// アクセサリー1, 2
// その他アイテム1, 2
// 各アイテムには希望する金額を設定できる（デフォルト値は 0）
model ItemNeed {
  id             Int      @id @default(autoincrement())
  userName       String
  item1          Item?    @relation("itemNeed1", fields: [item1Id], references: [id])
  item1Id        Int?
  item1Price     Int?     @default(0)
  item1NowBuying Boolean? @default(false) // このアイテムを無限買取中か否か
  item1Memo      String?  @default("") // 任意のメモ
  item2          Item?    @relation("itemNeed2", fields: [item2Id], references: [id])
  item2Id        Int?
  item2Price     Int?     @default(0)
  item2NowBuying Boolean? @default(false)
  item2Memo      String?  @default("")
  item3          Item?    @relation("itemNeed3", fields: [item3Id], references: [id])
  item3Id        Int?
  item3Price     Int?     @default(0)
  item3NowBuying Boolean? @default(false)
  item3Memo      String?  @default("")
  item4          Item?    @relation("itemNeed4", fields: [item4Id], references: [id])
  item4Id        Int?
  item4Price     Int?     @default(0)
  item4NowBuying Boolean? @default(false)
  item4Memo      String?  @default("")
  item5          Item?    @relation("itemNeed5", fields: [item5Id], references: [id])
  item5Id        Int?
  item5Price     Int?     @default(0)
  item5NowBuying Boolean? @default(false)
  item5Memo      String?  @default("")
  item6          Item?    @relation("itemNeed6", fields: [item6Id], references: [id])
  item6Id        Int?
  item6Price     Int?     @default(0)
  item6NowBuying Boolean? @default(false)
  item6Memo      String?  @default("")
  item7          Item?    @relation("itemNeed7", fields: [item7Id], references: [id])
  item7Id        Int?
  item7Price     Int?     @default(0)
  item7NowBuying Boolean? @default(false)
  item7Memo      String?  @default("")
  item8          Item?    @relation("itemNeed8", fields: [item8Id], references: [id])
  item8Id        Int?
  item8Price     Int?     @default(0)
  item8NowBuying Boolean? @default(false)
  item8Memo      String?  @default("")
}

model Memo {
  id    Int    @id @default(autoincrement())
  title String @default("")
  text  String @default("")
}
